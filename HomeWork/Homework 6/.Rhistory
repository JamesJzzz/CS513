source('~/Documents/Class/CS513/HomeWork/Homework 6/hw6.R', echo=TRUE)
source('~/Documents/Class/CS513/HomeWork/Homework 6/hw6.R', echo=TRUE)
remove(list = ls())
Breast_Cancer <- read.csv("/Users/JamesJz/Documents/Class/CS513/HomeWork/Homework 6/breast-cancer-wisconsin-data.csv", na.strings ='?')
Breast_Cancer = Breast_Cancer[,-1]
myData = seq(from=1, to=nrow(Breast_Cancer), by=5)
test<-Breast_Cancer[myData,]
training<-Breast_Cancer[-myData,]
training$benign = training$Class == "2"
training$malignant = training$Class == "4"
lol = neuralnet(Class~F1+F2+F3+F4+F5+F6+F7+F8+F9,training, hidden=5,linear.output = FALSE)
lol$result.matrix
plot(lol)
source('~/Documents/Class/CS513/HomeWork/Homework 6/hw6.R', echo=TRUE)
remove(list = ls())
library("neuralnet")
Breast_Cancer <- read.csv("/Users/JamesJz/Documents/Class/CS513/HomeWork/Homework 6/breast-cancer-wisconsin-data.csv", na.strings ='?')
Breast_Cancer<-Breast_Cancer[complete.cases(Breast_Cancer),]
Breast_Cancer = Breast_Cancer[,-1]
myData = seq(from=1, to=nrow(Breast_Cancer), by=5)
test<-Breast_Cancer[myData,]
training<-Breast_Cancer[-myData,]
training$benign = training$Class == "2"
training$malignant = training$Class == "4"
lol = neuralnet(Class~F1+F2+F3+F4+F5+F6+F7+F8+F9,training, hidden=5,linear.output = FALSE)
lol$result.matrix
plot(lol)
compute(lol, (1:10)^2)$net.result
compute(lol, test)$net.result
compute(lol, test)
compute(lol, test[1:9])
compute(lol, test[2:10])
View(Breast_Cancer)
compute(lol, Breast_Cancer[2:10])
compute(lol, test[, 2:10])
lol = neuralnet(Class~F1+F2+F3+F4+F5+F6+F7+F8+F9,training, hidden=5)
lol$result.matrix
compute(lol, test[, 2:10])
source('~/Documents/Class/CS513/HomeWork/Homework 6/hw6.R', echo=TRUE)
source('~/Documents/Class/CS513/HomeWork/Homework 6/hw6.R', echo=TRUE)
source('~/Documents/Class/CS513/HomeWork/Homework 6/hw6.R', echo=TRUE)
remove(list = ls())
library("neuralnet")
Breast_Cancer <- read.csv("/Users/JamesJz/Documents/Class/CS513/HomeWork/Homework 6/breast-cancer-wisconsin-data.csv", na.strings ='?')
Breast_Cancer<-Breast_Cancer[complete.cases(Breast_Cancer),]
Breast_Cancer = Breast_Cancer[,-1]
myData = seq(from=1, to=nrow(Breast_Cancer), by=5)
test<-Breast_Cancer[myData,]
training<-Breast_Cancer[-myData,]
lol = neuralnet(Class~F1+F2+F3+F4+F5+F6+F7+F8+F9,training, hidden=5)
lol$result.matrix
compute(lol, test[, 2:10])
rm(list=ls())
library(class)
library(ggplot2)
data(iris)
clusP <- hclust(dist(iris[, 3:4]), method = 'average')
plot(clusP)
clusCutP <- cutree(clusP, 3)
table(clusCutP, iris$Species)
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = clusCutP) +
scale_color_manual(values = c('blue', 'red', 'green'))
clustersS <- hclust(dist(iris[, 3:4]), method = 'average')
plot(clustersS)
clusCutS <- cutree(clustersS, 3)
table(clusCutS, iris$Species)
ggplot(iris, aes(Sepal.Width,Sepal.Length,  color = iris$Species)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = clusCutS) +
scale_color_manual(values = c('blue', 'red', 'green'))
remove(list = ls())
library(class)
data <- read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv")
View(data)
View(data)
rm(list=ls())
library(class)
library(ggplot2)
data(iris)
View(data)
View(iris)
remove(list = ls())
library(class)
rm(list=ls())
library(ggplot2)
data <- read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv")
View(data)
clusP <- hclust(dist(data[1:0]))
plot(clusP)
remove(list = ls())
library(class)
remove(list = ls())
library(class)
rm(list=ls())
library(ggplot2)
data <- read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv")
View(data)
clusP <- hclust(dist(as.matrix(data[1:0])))
plot(clusP)
clusP <- hclust(dist(as.matrix(data[1:0])))
clusterCut <- cutree(clusP, 3)
plot(clusP)
plot(clusterCut)
clusterCut <- cutree(clusP, 3)
plot(clusterCut)
rm(list=ls())
data(iris)
View(iris)
iris_dist<-dist(iris[,-5])
hclust_resutls<-hclust(iris_dist)
hclust_3<-cutree(hclust_resutls,3)
table(hclust_3,iris[,5])
?kmeans
kmeans_3<- kmeans(iris[,-5],3,nstart = 10)
kmeans_3$cluster
table(kmeans_3$cluster,iris[,5])
table(clusterCut,data[0])
table(clusterCut,data[0])
remove(list = ls())
library(class)
rm(list=ls())
library(ggplot2)
data <- read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv")
View(data)
clusP <- hclust(dist(as.matrix(data[1:0])))
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[1])
View(data)
table(clusterCut,data[,3])
?hclust
remove(list = ls())
library(class)
rm(list=ls())
library(ggplot2)
data <- read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv")
View(data)
clusP <- hclust(dist(data[, 3:4]), method = 'median')
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[,3])
View(data)
remove(list = ls())
library(class)
rm(list=ls())
library(ggplot2)
data <- read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv")
View(data)
clusP <- hclust(dist(data[1,3:0]), method = 'median')
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[,3])
clusP <- hclust(dist(data[,3]), method = 'median')
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[,3])
View(data)
clusP <- hclust(dist(data[,1:1]), method = 'average')
clusP <- hclust(dist(data[,1:1]), method = 'average')
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[,1])
clusP <- hclust(dist(data[,1:1]), method = 'average')
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[,1])
remove(list = ls())
library(class)
rm(list=ls())
library(ggplot2)
data <- read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv")
View(data)
clusP <- hclust(dist(data[,1:1]), method = 'average')
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[,1])
View(data)
table(kmeans_3$cluster,data[,2])
clusP <- hclust(dist(data[,2:2]), method = 'average')
data <- read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv")
View(data)
clusP <- hclust(dist(data[,2:2]), method = 'average')
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[,1])
?kmeans
clusP <- hclust(dist(data[,2:2]), method = 'average')
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[,2])
View(data)
ggplot(data, aes(Zip, Median, Mean, Pop, color = iris$Species)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = clusCutP) +
scale_color_manual(values = c('blue', 'red', 'green','yellow'))
ggplot(data, aes(Zip, Median, Mean, Pop, color = iris$Species)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = clusterCut) +
scale_color_manual(values = c('blue', 'red', 'green','yellow'))
ggplot(data, aes(Zip, Median, Mean, Pop, color = iris$Species)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = data[,2]) +
scale_color_manual(values = c('blue', 'red', 'green','yellow'))
remove(list = ls())
data <- as.data.frame(read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv"))
clusP <- hclust(dist(data[,2:2]), method = 'average')
clusterCut <- cutree(clusP, 3)
table(clusterCut,data[,2])
remove(list = ls())
library(class)
rm(list=ls())
library(ggplot2)
data <- as.data.frame(read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv"))
clusP <- hclust(dist(data[,2:2]), method = 'average')
clusterCut <- cutree(clusP, 3)
plot(clusP)
?kmeans
remove(list = ls())
library(class)
rm(list=ls())
library(ggplot2)
data <- as.data.frame(read.csv("/Users/JamesJz/Desktop/NJ_zip_median_income.csv"))
clusP <- hclust(dist(data[,2:2]), method = 'average')
clusterCut <- cutree(clusP, 3)
plot(clusP)
table(clusterCut,data[,2])
?kmeans
butmedian = data[,-2]
butpop = butmedian[,-3]
kmeans_3<- kmeans(butpop,3,nstart = 10)
kmeans_3$cluster
table(kmeans_3$cluster,butpop)
kmeans_3<- kmeans(butpop,3,nstart = 10)
kmeans_3$cluster
library(class)
library(randomForest)
rm(list=ls())
BC <- read.csv("/Users/JamesJz/Desktop/wisc_bc_ContinuousVar.csv")
View(BC)
BC = BC[,-1]
View(BC)
rm(list=ls())
BC <- read.csv("/Users/JamesJz/Desktop/wisc_bc_ContinuousVar.csv")
BC = BC[,-1]
View(BC)
set.seed(321)
BC <- data.frame(lapply(BC, as.factor))
BC<-BC[complete.cases(BC),]
myData = seq(from=1, to=nrow(BC), by=5)
test<-BC[myData,]
training<-BC[-myData,]
fit <- randomForest(Class~F1+F2+F3+F4+F5+F6+F7+F8+F9, data = training, importance = TRUE, ntree= 2000)
importance(fit)
BC <- read.csv("/Users/JamesJz/Desktop/wisc_bc_ContinuousVar.csv")
BC = BC[,-1]
View(BC)
set.seed(321)
BC <- data.frame(lapply(BC, as.factor))
BC<-BC[complete.cases(BC),]
myData = seq(from=1, to=nrow(BC), by=5)
test<-BC[myData,]
training<-BC[-myData,]
diaCol = 1
train = as.data.frame(training[,-diaCol])
trainLabels = as.factor(unlist(training[,diaCol]))
testVals = as.data.frame(training[,-diaCol])
testLabels = as.factor(unlist(test[,diaCol]))
fit <- randomForest(train,trainLabels, importance = TRUE, ntree= 1000)
fit <- randomForest(train,trainLabels, ntree= 1000)
testVals = as.data.frame(test[,-diaCol])
testLabels = as.factor(unlist(test[,diaCol]))
fit <- randomForest(train,trainLabels, ntree= 1000)
testLabels = as.factor(unlist(test[,diaCol]))
fit <- randomForest(train,trainLabels, ntree= 1000)
library(class)
library(randomForest)
rm(list=ls())
BC <- read.csv("/Users/JamesJz/Desktop/wisc_bc_ContinuousVar.csv")
BC = BC[,-1]
View(BC)
set.seed(321)
BC<-BC[complete.cases(BC),]
myData = seq(from=1, to=nrow(BC), by=5)
test<-BC[myData,]
training<-BC[-myData,]
diaCol = 1
train = as.data.frame(training[,-diaCol])
trainLabels = as.factor(unlist(training[,diaCol]))
testVals = as.data.frame(test[,-diaCol])
testLabels = as.factor(unlist(test[,diaCol]))
fit <- randomForest(train,trainLabels, ntree= 1000)
Prediction <- predict(fit, test)
Prediction
lol = (testLabels != Prediction)
lol
error_rate = sum(lol)/length(lol)
error_rate
library(class)
library(neuralnet)
library(nnet)
rm(list=ls())
titanic <- read.csv('/Users/katieprescott/Desktop/CS513/datasets/Titanic_rows.csv', stringsAsFactors = TRUE)
titanic$iClass= as.integer(as.factor(titanic$Class))
titanic <- read.csv('/Users/JamesJz/Documents/Class/CS513/Final Exam/Titanic_rows.csv', stringsAsFactors = TRUE)
titanic$iClass= as.integer(as.factor(titanic$Class))
titanic$iSex= as.integer(as.factor(titanic$Sex))
titanic$iAge= as.integer(as.factor(titanic$Age))
titanic$iSurvived= as.integer(as.factor(titanic$Survived))
myData = seq(from=1, to=nrow(titanic), by=5)
test<-titanic[myData,]
training<-titanic[-myData,]
training$survive = training$iSurvived == "2"
training$dead = training$iSurvived == "1"
ann = neuralnet(iSurvived~ iClass + iSex + iAge, training, hidden=5, threshold=0.1)
plot(ann)
ann_res <- compute(ann, test[, 5:7])
ann2=as.numeric(ann_res$net.result)
ann_round<-round(ann2)
ann_cat<-ifelse(ann2<1.5,1,2)
table(Actual=test$iSurvived,ann_round)
table(Actual=test$iSurvived,ann_cat)
wrong<- (test$iSurvived!=ann_cat)
rate<-sum(wrong)/length(wrong)
rate
rm(list=ls())
BC <- read.csv("/Users/JamesJz/Documents/Class/CS513/Final Exam/wisc_bc_ContinuousVar.csv")
BC = BC[,-1]
set.seed(321)
myData = seq(from=1, to=nrow(BC), by=5)
test<-BC[myData,]
training<-BC[-myData,]
diaCol = 1
train = as.data.frame(training[,-diaCol])
trainLabels = as.factor(unlist(training[,diaCol]))
testVals = as.data.frame(test[,-diaCol])
testLabels = as.factor(unlist(test[,diaCol]))
fit <- randomForest(train,trainLabels, ntree= 1000)
Prediction <- predict(fit, test)
Prediction
lol = (testLabels != Prediction)
lol
error_rate = sum(lol)/length(lol)
error_rate
table(Prediction=Prediction,Actual=test[,10])
remove(list = ls())
library(class)
rm(list=ls())
library(ggplot2)
data <- as.data.frame(read.csv("/Users/JamesJz/Documents/Class/CS513/Final Exam/NJ_zip_median_income.csv"))
clusP <- hclust(dist(data[,2:2]), method = 'average')
clusterCut <- cutree(clusP, 3)
plot(clusP)
table(clusterCut,data[,2])
?kmeans
butmedian = data[,-2]
butpop = butmedian[,-3]
kmeans_3<- kmeans(butpop,3,nstart = 10)
kmeans_3$cluster
table(kmeans_3$cluster,butpop)
kmeans_3$cluster
table(kmeans_3$cluster,butpop)
table(kmeans_3$cluster,butmedian[,-3])
?kmeans
butmedian = as.data.frame(data[,-2])
butpop = as.data.frame(butmedian[,-3])
kmeans_3<- kmeans(butpop,3,nstart = 10)
kmeans_3$cluster
table(kmeans_3$cluster,butpop)
View(data)
?table
table(kmeans_3$cluster,data$Zip)
table(kmeans_3$cluster,data$Pop)
