# Zhiyuan(James) Zhang
# Sep 24 2016
# I pledge my honor that I have abided by the Stevens Honor System.
x<-c(1,2,3)
y<-c(11,12,13,14,15,16)
z<-x+y
print(z)
#Because the length of the two vectors are different.
#so it add 1,2,3 to 11,12,13, and then add 1,2,3 to 14,15,16 again.
myFirstName <- c("Zhiyuan(James)")
myLastName <- c("Zhang")
myID<-c(10399976)
print(length(myLastName))
print(typeof(myLastName))
# the length is 1 because it recognize the entire string as
# characters and there is only one string so the length is 1
myinfo<-c(myLastName,myFirstName,myID)
print(myinfo)
print(length(myinfo))
print(typeof(myinfo))
rm(myFirstName)
print(myinfo)
info<-c("fname1","fname2","lname1","lname2",1111,2222)
roster<-matrix(info,nrow=2, ncol = 3,byrow = FALSE)
colnames(roster)<-c("First","Last","ID")
View(roster)
rm(list=ls())
# Zhiyuan(James) Zhang
# Sep 24 2016
# I pledge my honor that I have abided by the Stevens Honor System.
x<-c(1,2,3)
y<-c(11,12,13,14,15,16)
z<-x+y
print(z)
#Because the length of the two vectors are different.
#so it add 1,2,3 to 11,12,13, and then add 1,2,3 to 14,15,16 again.
myFirstName <- c("Zhiyuan(James)")
myLastName <- c("Zhang")
myID<-c(10399976)
print(length(myLastName))
print(typeof(myLastName))
# the length is 1 because it recognize the entire string as
# characters and there is only one string so the length is 1
myinfo<-c(myLastName,myFirstName,myID)
print(myinfo)
print(length(myinfo))
print(typeof(myinfo))
rm(myFirstName)
print(myinfo)
info<-c("fname1","fname2","lname1","lname2",1111,2222)
roster<-matrix(info,nrow=2, ncol = 3,byrow = FALSE)
colnames(roster)<-c("First","Last","ID")
View(roster)
rm(list=list())
rm(list=ls())
getwd()
setwd("/Users/katieprescott/Desktop/hw1")
df <- read.csv('Titanic_rows.csv', header = TRUE, sep = ',')
#a. probability passenger survived:
summary(df$Survived)
## yes/total = 711/2201 = 32.3%
#b. probability passenger was first class:
summary(df$Class)
## first/total = 325/2201 = 14.77%
newdf = subset(df, select=c("Survived", "Sex"))
newdata <- newdf[ which(newdf$Survived=='Yes'
& newdf$Sex == 'Female'), ]
#c. probability passenger was female and survived
summary(newdata)
## number/total = 344/2201 = 15.6%
#d. given passenger survived, probability was female
## (answer to c)/(answer to a) = (.1563/.323) = 48.39%
#e. are survival and staying in first class independent?
## P(firstclass|survived) ==? P(survived) -> 28.55% != 32.3%
## NO
survivedf = subset(df, select = c("Survived", "Class"))
survivedata <- survivedf[ which(survivedf$Survived == 'Yes'
& survivedf$Class == '1st'), ]
summary(survivedata)
#f. given survival, probability that passenger was first class female?
## (first class female survivors)/(first class survivors) = 141/203 = 69.46%
firstclass = subset(df, select = c("Survived", "Class", "Sex"))
firstclassdata <- firstclass[ which(firstclass$Survived == 'Yes'
& firstclass$Class == '1st'), ]
summary(firstclassdata)
#g. see d
#h. given survival, what is probability of frst class
## (first class survivors)/(survivors) = 203/711 = 28.55%
#i. given survival, are being female and first class independent
## NOT independent -> (141/711) != (203/711) -> 19.8% != 28.55%
newfirstclass = subset(df, select = c("Survived", "Class", "Sex"))
newfirstclassdata <- newfirstclass[ which(newfirstclass$Survived == 'Yes'
& newfirstclass$Sex == 'Female'), ]
summary(newfirstclassdata)
getwd()
#setwd("/Users/katieprescott/Desktop/hw1")
df <- read.csv('Titanic_rows.csv', header = TRUE, sep = ',')
#a. probability passenger survived:
summary(df$Survived)
## yes/total = 711/2201 = 32.3%
#b. probability passenger was first class:
summary(df$Class)
## first/total = 325/2201 = 14.77%
newdf = subset(df, select=c("Survived", "Sex"))
newdata <- newdf[ which(newdf$Survived=='Yes'
& newdf$Sex == 'Female'), ]
#c. probability passenger was female and survived
summary(newdata)
## number/total = 344/2201 = 15.6%
#d. given passenger survived, probability was female
## (answer to c)/(answer to a) = (.1563/.323) = 48.39%
#e. are survival and staying in first class independent?
## P(firstclass|survived) ==? P(survived) -> 28.55% != 32.3%
## NO
survivedf = subset(df, select = c("Survived", "Class"))
survivedata <- survivedf[ which(survivedf$Survived == 'Yes'
& survivedf$Class == '1st'), ]
summary(survivedata)
#f. given survival, probability that passenger was first class female?
## (first class female survivors)/(first class survivors) = 141/203 = 69.46%
firstclass = subset(df, select = c("Survived", "Class", "Sex"))
firstclassdata <- firstclass[ which(firstclass$Survived == 'Yes'
& firstclass$Class == '1st'), ]
summary(firstclassdata)
#g. see d
#h. given survival, what is probability of frst class
## (first class survivors)/(survivors) = 203/711 = 28.55%
#i. given survival, are being female and first class independent
## NOT independent -> (141/711) != (203/711) -> 19.8% != 28.55%
newfirstclass = subset(df, select = c("Survived", "Class", "Sex"))
newfirstclassdata <- newfirstclass[ which(newfirstclass$Survived == 'Yes'
& newfirstclass$Sex == 'Female'), ]
summary(newfirstclassdata)
newdf = subset(df, select=c("Survived", "Sex"))
newdata <- newdf[ which(newdf$Survived=='Yes'
& newdf$Sex == 'Female'), ]
getwd()
setwd("/Users/JamesJz/Documents/Class/CS513/HomeWork")
#df <- read.csv('Titanic_rows.csv', header = TRUE, sep = ',')
df<- read.csv(file="Titanic_rows.csv",head=TRUE,sep=",")
#a. probability passenger survived:
summary(df$Survived)
## yes/total = 711/2201 = 32.3%
#b. probability passenger was first class:
summary(df$Class)
## first/total = 325/2201 = 14.77%
newdf = subset(df, select=c("Survived", "Sex"))
newdata <- newdf[ which(newdf$Survived=='Yes'
& newdf$Sex == 'Female'), ]
#c. probability passenger was female and survived
summary(newdata)
## number/total = 344/2201 = 15.6%
#d. given passenger survived, probability was female
## (answer to c)/(answer to a) = (.1563/.323) = 48.39%
#e. are survival and staying in first class independent?
## P(firstclass|survived) ==? P(survived) -> 28.55% != 32.3%
## NO
survivedf = subset(df, select = c("Survived", "Class"))
survivedata <- survivedf[ which(survivedf$Survived == 'Yes'
& survivedf$Class == '1st'), ]
summary(survivedata)
#f. given survival, probability that passenger was first class female?
## (first class female survivors)/(first class survivors) = 141/203 = 69.46%
firstclass = subset(df, select = c("Survived", "Class", "Sex"))
firstclassdata <- firstclass[ which(firstclass$Survived == 'Yes'
& firstclass$Class == '1st'), ]
summary(firstclassdata)
#g. see d
#h. given survival, what is probability of frst class
## (first class survivors)/(survivors) = 203/711 = 28.55%
#i. given survival, are being female and first class independent
## NOT independent -> (141/711) != (203/711) -> 19.8% != 28.55%
newfirstclass = subset(df, select = c("Survived", "Class", "Sex"))
newfirstclassdata <- newfirstclass[ which(newfirstclass$Survived == 'Yes'
& newfirstclass$Sex == 'Female'), ]
summary(newfirstclassdata)
summary(df$Survived = "No")
summary(df$Survived)
summary(df$Class)
summary(newdata)
summary(firstclassdata)
summary(newfirstclassdata)
getwd()
setwd("/Users/katieprescott/Desktop/hw1")
df <- read.csv('Titanic_rows.csv', header = TRUE, sep = ',')
#a. probability passenger survived:
summary(df$Survived)
## yes/total = 711/2201 = 32.3%
#b. probability passenger was first class:
summary(df$Class)
## first/total = 325/2201 = 14.77%
newdf = subset(df, select=c("Survived", "Sex"))
newdata <- newdf[ which(newdf$Survived=='Yes'
& newdf$Sex == 'Female'), ]
#c. probability passenger was female and survived
summary(newdata)
## number/total = 344/2201 = 15.6%
#d. given passenger survived, probability was female
## (answer to c)/(answer to a) = (.1563/.323) = 48.39%
#e. are survival and staying in first class independent?
## P(firstclass|survived) ==? P(survived) -> 28.55% != 32.3%
## NO
survivedf = subset(df, select = c("Survived", "Class"))
survivedata <- survivedf[ which(survivedf$Survived == 'Yes'
& survivedf$Class == '1st'), ]
summary(survivedata)
#f. given survival, probability that passenger was first class female?
## (first class female survivors)/(first class survivors) = 141/203 = 69.46%
firstclass = subset(df, select = c("Survived", "Class", "Sex"))
firstclassdata <- firstclass[ which(firstclass$Survived == 'Yes'
& firstclass$Class == '1st'), ]
summary(firstclassdata)
#g. see d
#h. given survival, what is probability of frst class
## (first class survivors)/(survivors) = 203/711 = 28.55%
#i. given survival, are being female and first class independent
## NOT independent -> (141/711) != (203/711) -> 19.8% != 28.55%
newfirstclass = subset(df, select = c("Survived", "Class", "Sex"))
newfirstclassdata <- newfirstclass[ which(newfirstclass$Survived == 'Yes'
& newfirstclass$Sex == 'Female'), ]
summary(newfirstclassdata)
summary(df$Survived)
# Zhiyuan(James) Zhang
# 10399976
# I pledge my honor that I have abided by the Stevens Honor System.
# ------James
rm(list=ls())
#load the dataset
library(class)
data("iris")
View(iris)
#find the min and max value of each column except the last column
min_col <- apply(iris[,-5],2,min);
max_col <- apply(iris[,-5],2,max);
# the range of min and max
range_col = max_col - min_col
#nomalize the data
for (i in 1:nrow(iris)){
iris[i,-5] <- (iris[i,-5] - min_col) /range_col
}
#ceate the testing set with every fifth record in iris starting from first one
idx <- seq(1,nrow(iris),5)
test <- iris[idx,]
training <-iris[-idx,]
# measure the permformance of the knn
# this is the error ratio:
error_ratio <- function(r){
count <- 0.0 ;
for (i in 1:length(r)){
if (r[i] == TRUE){
count = count + 1
}
}
ratio <-(length(r)-count) / length(r)
return (ratio)
}
#When k = 1
result1 <- knn(training[,-5],test[,-5],training[,5],k=1)
result1
#error ratio is :
e1 <- 1 - sum(test[,5]==result1) / length(result1)
e1
#When k = 2
result2 <- knn(training[,-5],test[,-5],training[,5],k=2)
result2
#error ratio is :
e2 <- 1 - sum(test[,5]==result2) / length(result2)
e2
#When k = 5
result3 <- knn(training[,-5],test[,-5],training[,5],k=5)
result3
#error ratio is :
e3 <- 1 - sum(test[,5]==result3) / length(result3)
e3
#When k = 10
result4 <- knn(training[,-5],test[,-5],training[,5],k=10)
result4
#error ratio is :
e4 <- 1 - sum(test[,5]==result4) / length(result4)
e4
# conlusion : according to the result, when set k=10,
# the classification may or may not get completely correct
# and the others just has the same error ratio
